<div class="container-fluid" id="create_product_components">

	<div class="wrapper d-none">
		<h1 class="title-medium"><%= UI_DISPLAY_LANG.views.pages.all_clinics.sectionTitle %></h1>
	</div>

	<div class="alert alert-info mt-3 mb-2" style="display:none;" id="ERROR_BOX">
		<img src="assets/img/utils/info.png" class="alert-icon" alt="">
		<div class="alert-text" id="text"></div>
	</div>

	<div class="mt-3">

        <form action="" id="create_form">

            <div class="row gy-5">

                <div class="col-lg-6 col-md-6">

                    <h2 class="h2 mb-4"><%= UI_DISPLAY_LANG.views.pages.global.text101 %></h2>

                    <div class="mb-2">
                
                        <div class="mb-2">
                            <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-inventory.template.ejs`, {
                                componentId: 'select_inventory_component',
                                selectId: 'inventory_select',
                            }) -%>
                        </div>

                        <div class="mb-2">
                            <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-categories2.template.ejs`, {
                                componentId: 'select_categories_component',
                                selectId: 'category_select',
                            }) -%>
                        </div>

                        <div class="mb-2">
                            <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-families.template.ejs`, {
                                componentId: 'select_families_component',
                                selectId: 'family_select',
                            }) -%>
                        </div>
        
                        <div class="">

                            <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label135 %></label>

                            <div id="suggestions_box_div">
                                <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-suggestions-box.template.ejs`, {
                                    componentId: '1',
                                    eventsReceiverId: 'create_center_to_center_unconfirmed_transfer_invoices_container',
                                    searchInputId: 'codeInput',
                                    suggestions: {
                                        api: {
                                            model: "PRODUCT_MODEL",
                                            method: "center_local_search",
                                        },
                                        selections: {
                                            name: 'productName',
                                            value: 'productCode',
                                        }
                                    }
                                }) -%>
                            </div>

                        </div>

                    </div>

                    <div class="">
                        <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label137 %></label>
                        <div class="flex">
                            <div class="w-100">
                                <input type="number" step="any" min="0" class="input-text" id="total_quantity_input" value="1">
                            </div>
                            <div class="width-10px"></div>
                            <div class="width-120px">
                                <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-unit.template.ejs`, {
                                    componentId: "select_unit_component",
                                    selectId: "unit_select",
                                }) -%>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-lg-6 col-md-6">

                    <h2 class="h2 mb-4"><%= UI_DISPLAY_LANG.views.pages.global.text102 %></h2>

                    <div class="mb-2">
                        <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-inventory.template.ejs`, {
                            componentId: 'item__select_inventory_component',
                            selectId: 'item__inventory_select',
                        }) -%>
                    </div>

                    <div class="mb-2">
                        <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-categories2.template.ejs`, {
                            componentId: 'item__select_categories_component',
                            selectId: 'item__category_select',
                        }) -%>
                    </div>

                    <div class="mb-2">
                        <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-families.template.ejs`, {
                            componentId: 'item__select_families_component',
                            selectId: 'item__family_select',
                        }) -%>
                    </div>
    
                    <div class="mb-2">

                        <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label136 %></label>

                        <div id="item__suggestions_box_div">
                            <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-suggestions-box.template.ejs`, {
                                componentId: 'item__1',
                                eventsReceiverId: 'create_center_to_center_unconfirmed_transfer_invoices_container',
                                searchInputId: 'item__codeInput',
                                suggestions: {
                                    api: {
                                        model: "PRODUCT_MODEL",
                                        method: "center_local_search",
                                    },
                                    selections: {
                                        name: 'productName',
                                        value: 'productCode',
                                    }
                                }
                            }) -%>
                        </div>

                    </div>

                    <div class="">
                        <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label116 %></label>
                        <div class="flex">
                            <div class="w-100">
                                <input type="number" step="any" min="0" class="input-text" id="item__quantity_input" value="1">
                            </div>
                            <div class="width-10px"></div>
                            <div class="width-120px">
                                <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-unit.template.ejs`, {
                                    componentId: "item__select_unit_component",
                                    selectId: "item__unit_select",
                                }) -%>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-12">

                    <div class="mb-4">
                        <button type="button" class="btn btn-success" id="add_item_button">
                            <%= UI_DISPLAY_LANG.views.pages.global.add_item %>
                        </button>
                    </div>

                    <div class="js_deletable_list overflow-x-hidden overflow-y-auto max-height-100vh" id="components_list">
                        
                    </div>

                </div>

            </div>


            <div class="mt-5">
                <input type="submit" class="btn btn-primary btn-sm" value="<%= UI_DISPLAY_LANG.views.pages.global.save_changes_button %>">
            </div>

        </form>
        
	</div>

</div>

<script>

$(function()
{

var page_container = $('#create_product_components')

if ( !page_container[0] ) return

const ERROR_BOX = page_container.find('#ERROR_BOX')

const create_form = page_container.find('#create_form')

const inventory_select = page_container.find('#inventory_select')
const category_select = page_container.find('#category_select')
const family_select = page_container.find('#family_select')
const suggestions_box_div = page_container.find('#suggestions_box_div')
var codeInput = page_container.find('#codeInput')
const total_quantity_input = page_container.find('#total_quantity_input')
const unit_select = page_container.find('#unit_select')

const item__inventory_select = page_container.find('#item__inventory_select')
const item__category_select = page_container.find('#item__category_select')
const item__family_select = page_container.find('#item__family_select')
const item__suggestions_box_div = page_container.find('#item__suggestions_box_div')
var item__codeInput = page_container.find('#item__codeInput')
const item__quantity_input = page_container.find('#item__quantity_input')
const item__unit_select = page_container.find('#item__unit_select')

const add_item_button = page_container.find('#add_item_button')
const components_list = page_container.find('#components_list')

var ProductObject = sessionData(true)
var Product = {}
var Item = {}
// submit
create_form.on('submit', async e =>
{
    e.preventDefault()

    // check product
    if ( isNull(codeInput.val()) )
    {
        CreateToast('PS', FUI_DISPLAY_LANG.views.messages.invalid_product_selected, '')
        return
    }

    create_form.find(':submit').addClass('disabled')
    // update
    if ( !isNull(ProductObject.id) )
    {
        var res = await PRODUCT_MODEL.component_batchUpdateByProduct({
            collection: selectedItems()
        })

        create_form.find(':submit').removeClass('disabled')

        CreateToast('PS', res.message, '')

        if ( res.code == 404 ) return

        clearItems()
        ProductObject.id = null

        return
    }
    // store
    var res = await PRODUCT_MODEL.component_batchStore({
        collection: selectedItems()
    })

    create_form.find(':submit').removeClass('disabled')

    CreateToast('PS', res.message, '')

    if ( res.code == 404 ) return

    clearItems()

})

// select inventory
inventory_select.on('change', refreshSuggestionsBox)
// select category
category_select.on('change', refreshSuggestionsBox)
// select family
family_select.on('change', refreshSuggestionsBox)
// refresh suggestions box
async function refreshSuggestionsBox()
{
    suggestions_box_div.html('')

    var html = await renderView('/templates/select-suggestions-box.template.ejs', {
        componentId: '1',
        eventsReceiverId: 'create_selectable_suppliers_to_selectable_users_unconfirmed_invoices',
        searchInputId: 'codeInput',
        options: {
            filters: {
                category_id: category_select.find(':selected').val(),
                family_id: family_select.find(':selected').val(),
            }
        },
        suggestions: {
            api: {
                model: "PRODUCT_MODEL",
                method: "center_local_search",
                administration_id: getSender().id,
            },
            selections: {
                name: 'productName',
                value: 'productCode',
            }
        }
    })

    suggestions_box_div.html(html)

    // refresh selection
    codeInput = page_container.find('#codeInput')
    //
    onProductSelected()
}
// onProductSelected()
onProductSelected()
// getSender
function getSender()
{
    const sender = {
        id: USER_CONFIG.administration.clinicId,
        name: USER_CONFIG.administration.clinicName,
    }

    if ( !isNull(inventory_select.find(':selected').val()) )
    {
        sender.id = inventory_select.find(':selected').val()
        sender.name = inventory_select.find(':selected').text()
    }

    return sender
}
// product selected
function onProductSelected()
{
    codeInput.off('suggestion-selected').on('suggestion-selected', e =>
    {
        const suggestion = e.originalEvent.detail.suggestion

        Product = suggestion.data
    })
}
// select inventory
item__inventory_select.on('change', item__refreshSuggestionsBox)
// select category
item__category_select.on('change', item__refreshSuggestionsBox)
// select family
item__family_select.on('change', item__refreshSuggestionsBox)
// refresh suggestions box
async function item__refreshSuggestionsBox()
{
    item__suggestions_box_div.html('')

    var html = await renderView('/templates/select-suggestions-box.template.ejs', {
        componentId: 'item__1',
        eventsReceiverId: 'create_selectable_suppliers_to_selectable_users_unconfirmed_invoices',
        searchInputId: 'item__codeInput',
        options: {
            filters: {
                category_id: item__category_select.find(':selected').val(),
                family_id: item__family_select.find(':selected').val(),
            }
        },
        suggestions: {
            api: {
                model: "PRODUCT_MODEL",
                method: "center_local_search",
                administration_id: item__getSender().id,
            },
            selections: {
                name: 'productName',
                value: 'productCode',
            }
        }
    })

    item__suggestions_box_div.html(html)

    // refresh selection
    item__codeInput = page_container.find('#item__codeInput')
    //
    onItemSelected()
}
// getSender
function item__getSender()
{
    const sender = {
        id: USER_CONFIG.administration.clinicId,
        name: USER_CONFIG.administration.clinicName,
    }

    if ( !isNull(item__inventory_select.find(':selected').val()) )
    {
        sender.id = item__inventory_select.find(':selected').val()
        sender.name = item__inventory_select.find(':selected').text()
    }

    return sender
}
// item selected
onItemSelected()
function onItemSelected()
{
    item__codeInput.off('suggestion-selected').on('suggestion-selected', e =>
    {
        const suggestion = e.originalEvent.detail.suggestion

        Item = suggestion.data
    })
}
// add item
add_item_button.on('click', e =>
{
    addItem({
        item_id: Item.productId,
        item_name: Item.productName,
        item_quantity: item__quantity_input.val(),
        item_unit: item__unit_select.find(':selected').val(),
    })

    item__codeInput.val(null)
})
// addItem
function addItem(options)
{
    // check item
    if ( isNull(options.item_id) )
    {
        CreateToast('PS', FUI_DISPLAY_LANG.views.messages.invalid_item_selected, '')
        return
    }

    if ( components_list.find(`#item__${options.item_id}`)[0] ) return
    const html = `
    <div class="mb-2">
        <div class="form-field-01 d-inline-flex js_deletable_list_item" id="item__${options.item_id}" data-role="row" data-item-id="${options.item_id}" data-item-name="${options.item_name}" data-item-quantity="${options.item_quantity}" data-item-unit="${options.item_unit}">

            <div class="form-field-icon-holder text-color-27 width-50px">
                <i class="fas fa-long-arrow-alt-left"></i>
            </div>

            <div class="form-field-input-holder">
                
                <div class="d-flex">
                    <input type="text" class="form-field-input" readonly value="${options.item_name}"> 
                </div>

                <div class="d-flex">
                    <input type="text" class="form-field-input" readonly value="${options.item_quantity} ${ FUI_DISPLAY_LANG.views.pages.global.units[options.item_unit] }"> 
                </div>

                <div class="d-flex flex-shrink-0 justify-content-center align-items-center width-50px h-100 js_deletable_list_item__delete_button cursor-pointer rounded">
                    <span class="no-pointer"><i class="fas fa-times"></i></span>
                </div>

            </div>

        </div>
    </div>
    `

    components_list.append(html)
    // dispatch_onNewAjaxContentLoaded
    dispatch_onNewAjaxContentLoaded()
}
// clear items
function clearItems()
{
    components_list.html('')
}
// selected items
function selectedItems()
{
    var list = []

    const items = components_list.find('[data-role="row"]')

    items.each((k,v) =>
    {
        const item = $(v)

        list.push({
            administration_id: USER_CONFIG.administration.clinicId,
            administration_name: USER_CONFIG.administration.clinicName,
            productId: Product.productId,
            productName: Product.productName,
            total_quantity: total_quantity_input.val(),
            total_quantity_unit: unit_select.find(':selected').val(),
            item_id: item.data('item-id'),
            item_name: item.data('item-name'),
            item_quantity: item.data('item-quantity'),
            item_unit: item.data('item-unit'),
        })
    })

    return list
}

// displayOne
displayOne()
function displayOne()
{
    if ( isNull(ProductObject.id) ) return

    Product = ProductObject

    codeInput.val( ProductObject.productCode )

    if ( ProductObject.components )
    {
        total_quantity_input.val( ProductObject.components[0].total_quantity )
        setOptionSelected(unit_select, ProductObject.components[0].total_quantity_unit)
        for (let i = 0; i < ProductObject.components.length; i++) 
        {
            const component = ProductObject.components[i]
            
            addItem(component)
        }
    }
}

})

</script>