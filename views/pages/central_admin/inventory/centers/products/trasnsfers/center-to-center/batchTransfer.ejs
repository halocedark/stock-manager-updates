<div class="container-fluid" id="transfer_center_to_center_products_container">

	<div class="wrapper d-none">
		<h1 class="title-medium"><%= UI_DISPLAY_LANG.views.pages.add_products.sectionTitle %></h1>
	</div>

	<div class="mt-3">

		<div class="alert alert-info my-2" style="display:none;" id="ERROR_BOX">
			<img src="assets/img/utils/info.png" class="alert-icon" alt="">
			<div class="alert-text" id="text"></div>
		</div>

		<div>

			<form action="#" id="create_form">

                <div class="row gy-4 mb-4">

                    <div class="col-md-6">

                        <div class="px-3 py-3 border rounded">

                            <h4 class="mb-4"><%= UI_DISPLAY_LANG.views.pages.global.sender %></h4>

                            <div class="mb-2">
                                <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-centers.template.ejs`, {
                                    componentId: 'sender__',
                                    eventsReceiverId: 'transfer_center_to_center_products_container',
                                    selectId: 'sender__center_select',
                                }) -%>
                            </div>
            
                            <div class="mb-2 max-width-340px d-none WRAPPER">
                                <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label38 %></label>
                                <!-- <input type="text" class="input-text" id="codeInput" value=""> -->
                                <div class="" id="sender__product_selection_box">
                                    <!-- <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-suggestions-box.template.ejs`, {
                                        componentId: 'sender__',
                                        eventsReceiverId: 'transfer_center_to_center_products_container',
                                        searchInputId: 'sender__product_code_input',
                                        searchInputPlaceholder: UI_DISPLAY_LANG.views.pages.global.placeholder19,
                                        suggestions: {
                                            api: {
                                                model: "PRODUCT_MODEL"
                                            },
                                            selections: {
                                                name: 'productName',
                                                value: 'productCode',
                                            }
                                        }
                                    }) -%> -->
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="col-md-6">

                        <div class="px-3 py-3 border rounded">

                            <h4 class="mb-4"><%= UI_DISPLAY_LANG.views.pages.global.receiver %></h4>

                            <div class="mb-2">
                                <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-centers.template.ejs`, {
                                    componentId: 'receiver__',
                                    eventsReceiverId: 'transfer_center_to_center_products_container',
                                    selectId: 'receiver__center_select',
                                }) -%>
                            </div>

                            <div class="mb-2">
                                <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label116 %></label>
                                <input type="number" step="any" min="1" value="1" class="input-text input-text-outline" id="receiver__product_quantity_input">
                            </div>

                            <div class="mb-2">
                                <label for="" class="form-label"><%= UI_DISPLAY_LANG.views.pages.global.label94 %></label>
                                <input type="number" step="any" min="1" value="10" class="input-text input-text-outline" id="receiver__low_stock_threshold">
                            </div>

                        </div>

                    </div>

                </div>

                <div class="table-div mb-4 border-radius-10 WRAPPER d-none">

                    <table id="products_tableElement" class="table-2">
                        <thead>
                            <tr>
                                <th><%= UI_DISPLAY_LANG.views.pages.global.th24 %></th>
                                <th><%= UI_DISPLAY_LANG.views.pages.global.th26 %></th>
                                <th><%= UI_DISPLAY_LANG.views.pages.global.th27 %></th>
                                <th><%= UI_DISPLAY_LANG.views.pages.global.th59 %></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody class="overflow-x-hidden overflow-y-auto min-height-500px js_deletable_list">
                            <!-- <tr>
                                <td>
                                    <input type="checkbox" class="form-check-input">
                                </td>
                                <td>المنتج</td>
                                <td>548</td>
                                <td>0</td>
                            </tr> -->
                        </tbody>
                    </table>

                </div>

				<div class="mt-2">
					<input type="submit" class="btn btn-primary btn-sm shadow" value="<%= UI_DISPLAY_LANG.views.pages.add_products.form01.submitBTN01 %>">
				</div>
			</form>	
		</div>
	</div>
</div>

<script>

$(async function()
{

var page_container = $('#transfer_center_to_center_products_container');
if ( !page_container[0] )
    return;

var ERROR_BOX = page_container.find('#ERROR_BOX')

const create_form = page_container.find('#create_form')
// Sender
const sender__center_select = page_container.find('#sender__center_select')
const sender__product_selection_box = page_container.find('#sender__product_selection_box')
var sender__product_code_input = null
// Receiver
const receiver__center_select = page_container.find('#receiver__center_select')
const receiver__product_quantity_input = page_container.find('#receiver__product_quantity_input')
const receiver__low_stock_threshold = page_container.find('#receiver__low_stock_threshold')
// 
const products_tableElement = page_container.find('#products_tableElement')

// submit
create_form.on('submit', async e =>
{
    e.preventDefault()

    // check sender
    if ( isNull(sender__center_select.find(':selected').val() ) )
    {
        CreateToast('PS', FUI_DISPLAY_LANG.views.messages.invalid_sender_selected, '')
        return
    }

    // check receiver
    if ( isNull(receiver__center_select.find(':selected').val() ) )
    {
        CreateToast('PS', FUI_DISPLAY_LANG.views.messages.invalid_receiver_selected, '')
        return
    }
    
    // check products
    if ( selectedProducts().length == 0 )
    {
        CreateToast('PS', FUI_DISPLAY_LANG.views.messages.invalid_product_number, '')
        return
    }

    create_form.find(':submit').addClass('disabled')

    var res = await PRODUCT_MODEL.transfer_center_to_center_batchTransfer({
        user_id: receiver__center_select.find(':selected').val(),
        order_receiver_name: receiver__center_select.find(':selected').text(),
        supplier_id: sender__center_select.find(':selected').val(),
        supplier_name: sender__center_select.find(':selected').text(),
        ProductObjects: selectedProducts(),
    })

    create_form.find(':submit').removeClass('disabled')

    ERROR_BOX.show(0).delay(7*1000).hide(0).find('#text').text(res.message)
    CreateToast('PS', res.message, '')

    if ( res.code == 404 ) return

    // reset
    clearProducts()
})

// Select Sender
sender__center_select.on('change', async e =>
{
    const selected = sender__center_select.find(':selected')

    var html = await renderView(`/templates/select-suggestions-box.template.ejs`, {
        componentId: 'sender__',
        eventsReceiverId: 'transfer_center_to_center_products_container',
        searchInputId: 'sender__product_code_input',
        searchInputPlaceholder: FUI_DISPLAY_LANG.views.pages.global.placeholder19,
        options: {
            clearInputOnSelection: true,
        },
        suggestions: {
            api: {
                model: "PRODUCT_MODEL",
                method: "center_local_search",
                administration_id: selected.val(),
            },
            selections: {
                name: 'productName',
                value: 'productCode',
            }
        }
    })

    sender__product_selection_box.html(html).closest('.WRAPPER').removeClass('d-none')

    sender__product_code_input = sender__product_selection_box.find('#sender__product_code_input')

    // product selected
    sender__product_code_input.off('suggestion-selected').on('suggestion-selected', e =>
    {
        const suggestion = e.originalEvent.detail.suggestion

        appendProduct(suggestion.data)

    })

})

// append product
function appendProduct(options)
{
    var productQuantity = parseInt(receiver__product_quantity_input.val())
    const low_stock_threshold = parseInt(receiver__low_stock_threshold.val())

    // check if already selected
    const product = checkProduct(options.productId)
    if ( product )
    {
        productQuantity += product.productQuantity
        product.element.remove()
    }

    var html = `
    <tr class="js_deletable_list_item" id="product__${options.productId}" data-role="row" data-product-id="${options.productId}" data-product-quantity="${productQuantity}" data-low-stock-threshold="${low_stock_threshold}">
        <td>${options.productId}</td>
        <td>${options.productName}</td>
        <td class="js_product_quantity">${productQuantity}</td>
        <td>${low_stock_threshold}</td>
        <td>
            <div class="d-flex flex-shrink-0 justify-content-center align-items-center width-50px h-100 js_deletable_list_item__delete_button cursor-pointer rounded">
                <span class="no-pointer"><i class="fas fa-times"></i></span>
            </div>    
        </td>
    </tr>`

    products_tableElement.find('tbody').append(html)
    .closest('.WRAPPER').removeClass('d-none')
    // dispatch_onNewAjaxContentLoaded
    dispatch_onNewAjaxContentLoaded()
}
// check product exists
function checkProduct(id)
{
    const tr = products_tableElement.find('#product__' + id)

    return (tr[0]) 
            ? {
                productId: tr.data('product-id'),
                productQuantity: tr.data('product-quantity'),
                low_stock_threshold: tr.data('low-stock-threshold'),
                element: tr
            } 
            : false
}
// clear products
function clearProducts()
{
    products_tableElement.find('tbody').html('').closest('.WRAPPER').addClass('d-none')
}
// selected products
function selectedProducts()
{
    var list = []

    var items = products_tableElement.find('[data-role="row"]')

    for (let i = 0; i < items.length; i++) 
    {
        const item = $(items[i])
        
        list.push({
            productId: item.data('product-id'),
            productQuantity: item.data('product-quantity'),
            low_stock_threshold: item.data('low-stock-threshold'),
        })
    }

    return list
}

})

</script>