<div class="" id="<%= locals.componentId %>">

    <div class="row gy-3">

        <div class="<%= locals.columnsClass ? locals.columnsClass : 'col-lg-12 col-md-12' %>">
            <label for=""><%= locals.label ? locals.label : '' %></label>
            <select name="" class="input-text" id="<%= locals.selectId ? locals.selectId : 'owner_type_select' %>">
                <option value=""><%= UI_DISPLAY_LANG.views.pages.global.placeholder23 %></option>
                <!-- <option value="contractors"><%= UI_DISPLAY_LANG.views.pages.global.attributes.contractors %></option>
                <option value="customers"><%= UI_DISPLAY_LANG.views.pages.global.attributes.customers %></option>
                <option value="distributors"><%= UI_DISPLAY_LANG.views.pages.global.attributes.distributors %></option> -->
            </select>
        </div>

        <div class="<%= locals.columnsClass ? locals.columnsClass : 'col-lg-12 col-md-12' %>" id="selections_wrapper_<%= locals.componentId %>">
            <%- include(`${SETTINGS.UI_Settings.MAIN_DIR_NAME}/views/templates/select-contractors.template.ejs`, {
                componentId: (locals.contractors) ? locals.contractors.componentId : 'select_contractor_component',
                selectId: (locals.contractors) ? locals.contractors.selectId : 'contractor_select',
                options: {
                    search: {
                        currentAdministrationOnly: false,
                    }
                }
            }) -%>
        </div>

    </div>

</div>

<script>

    $(function()
    {

        const componentId = `<%- locals.componentId %>`
        const component = $('#'+componentId)

        var options = checkJSON(`<%- (locals.options) ? JSON.stringify(locals.options) : '' %>`)
        const defaultOptions = {
            components: {
                contractors: {
                    componentId: 'select_contractor_component',
                    selectId: 'contractor_select',
                    view: '/templates/select-contractors.template.ejs',
                },
                customers: {
                    componentId: 'select_customer_component',
                    selectId: 'customer_select',
                    view: '/templates/select-customers.template.ejs',
                },
                distributors: {
                    componentId: 'select_distributor_component',
                    selectId: 'distributor_select',
                    view: '/templates/select-distributors2.template.ejs',
                },
            },
            center: {
                id: null,
                name: null,
            }
        }

        options = {...defaultOptions, ...options}

        // console.log(options)

        var selectId = (`<%- locals.selectId %>` == '' || `<%- locals.selectId %>` == null) ? 'owner_type_select' : `<%- locals.selectId %>`
        var selectionEventName = (`<%- locals.selectionEventName %>` == '' || `<%- locals.selectionEventName %>` == null) ? 'owner-type-selected' : `<%- locals.selectionEventName %>`

        const selection_wrapper = component.find(`#selections_wrapper_${componentId}`)

        var owner_type_select = component.find(`#${selectId}`)

        owner_type_select.off('change').on('change', async e =>
        {
            const selected = owner_type_select.find(':selected')
            
            selection_wrapper.html('')

            if ( isNull(selected.val()) ) return
            
            // append other options
            options.components[selected.val()].options.search.administration_id = options.center.id
            // Append language object
            options.components[selected.val()].UI_DISPLAY_LANG = FUI_DISPLAY_LANG

            var html = await renderView(options.components[selected.val()].view, options.components[selected.val()])
            
            selection_wrapper.html(html)
        })

        owner_type_select.trigger('change')

        component.off('attributes-received').on('attributes-received', e =>
        {
            const detail = e.originalEvent.detail

            options = {...options, ...detail}

        })

        component.off('refresh').on('refresh', e =>
        {
            owner_type_select.trigger('change')
        })

        // display select options
        select_owner_type_displaySelectOptions()
        function select_owner_type_displaySelectOptions()
        {
            if ( !options.components ) return 
            if ( Object.keys(options.components).length == 0 ) return

            html = '<option value=""><%= UI_DISPLAY_LANG.views.pages.global.placeholder23 %></option>'
            for (const key in options.components) 
            {
                html += `<option value="${key}">${FUI_DISPLAY_LANG.views.pages.global.attributes[key]}</option>`
            }

            owner_type_select.html(html)
        }
    })

</script>