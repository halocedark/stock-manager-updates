<div id="<%= locals.componentId ? locals.componentId : 'select_media_component_' %>" class="<%= locals.classes ? locals.classes : 'd-inline' %>">

    <div class="select-media-control js_media_control">

        <div class="progress height-5px d-none js_media_control_progress">
            <div class="progress-bar bg-success" role="progressbar" style="width: 0%"></div>
        </div>

        <div class="select-media-control-overlay"></div>
            
        <div class="select-media-control-header">
            <div class="select-media-control-add-media-button js_select_media_control_add_media_button">
                <span class="select-media-control-add-media-button-icon"><i class="xfb xfb-plus-media"></i></span>
                <span class="select-media-control-add-media-button-text">Add Photos/videos</span>
            </div>
        </div>

        <div class="select-media-control-close-button js_select_media_control_close_button">
            <i class="xfb xfb-close-sm-thin"></i>
        </div>

        <label class="select-media-control-body">

            <div class="select-media-control-body-actions-content">

                <div class="js-select-media-control-actions js_select_media_control_actions">
                    <div class="select-media-control-button">
                        <i class="xfb xfb-plus-media"></i>
                    </div>
                    <div class="select-media-control-heading"><%= UI_DISPLAY_LANG.views.pages.global.add_photos_or_videos %></div>
                    <div class="select-media-control-subheading"><%= UI_DISPLAY_LANG.views.pages.global.text58 %></div>
                    <input type="file" class="select-media-control-file-input" accept="<%= locals.accept ? locals.accept : 'image/*, video/*' %>">
                </div>

            </div>

        </label>

        <div class="select-media-control-body-contents js_select_media_control_body_contents">

            
        </div>

        <div class="row gx-1 gy-1">

            
        </div>

    </div>

</div>

<script>

    $(function()
    {

        const component = $(`#<%= locals.componentId ? locals.componentId : 'select_media_component_' %>`)
        const js_media_control = component.find('.js_media_control')
        const js_select_media_control_close_button = component.find('.js_select_media_control_close_button')
        const js_select_media_control_actions = component.find('.js_select_media_control_actions')
        const js_select_media_control_img = component.find('.js_select_media_control_img')
        const file_input = component.find('input[type="file"]')
        const js_select_media_control_add_media_button = component.find('.js_select_media_control_add_media_button')

        const js_select_media_control_body_contents = component.find('.js_select_media_control_body_contents')

        const js_media_control_progress = component.find('.js_media_control_progress')

        var onMediaSelectionEventName = (`<%- locals.onMediaSelectionEventName %>` == '' || `<%- locals.onMediaSelectionEventName %>` == null) ? 'media-selected' : `<%- locals.onMediaSelectionEventName %>`
        var onMediaClearedEventName = (`<%- locals.onMediaClearedEventName %>` == '' || `<%- locals.onMediaClearedEventName %>` == null) ? 'media-cleared' : `<%- locals.onMediaClearedEventName %>`
        var onCloseRemove = (`<%- locals.onCloseRemove %>` == '' || `<%- locals.onCloseRemove %>` == null) ? true : /true/.test(`<%- locals.onCloseRemove %>`)
 
        // inputs unique id

        file_input.attr('id', component.attr('id')+'_file_input_' )

        // close
        js_select_media_control_close_button.off('click').on('click', e =>
        {
            if ( !onCloseRemove ) component.addClass('d-none')
            else component.remove()

            select_media_clearMedia()
            return false
        })
        // add media
        js_select_media_control_add_media_button.off('click').on('click', e =>
        {
            file_input.trigger('click')
        })
        // on upload progress
        component.on('select-media-component:on-upload-progress', e =>
        {
            const detail = e.originalEvent.detail
            const progress = detail.progress
            const percent = progress.percentComplete.toFixed(2)
           
            js_media_control_progress.removeClass('d-none').find('.progress-bar').css('width', percent+'%')
        })
        // on upload complete
        component.on('select-media-component:on-upload-complete', e =>
        {
            const detail = e.originalEvent.detail
            js_media_control_progress.addClass('d-none').find('.progress-bar').css('width', '0%')
        })
        // file selected
        file_input.off('change').on('change', async e =>
        {
            if ( file_input[0].files.length == 0 ) return

            var file = file_input[0].files[0]
            var files = file_input[0].files

            SectionLoader(component)

            var dataURLs = await fileToDataUrlWorker(files)

            select_media_appendMedia({
                file: file,
                url: dataURLs[0].url,
                extension : extractFileExtension(file.path)
            })
         
            const _onMediaSelectionEventName = new CustomEvent(onMediaSelectionEventName, {
                detail: {
                    urls: select_media_selected(), 
                    files: await urlToFileWorker({
                        data: select_media_selected()
                    }),
                    id: component.attr('id'),
                }
            }) 
            document.dispatchEvent(_onMediaSelectionEventName)
            file_input.val(null)
            SectionLoader(component, '')
        })
        $(document).off('select-media:received-media').on('select-media:received-media',async  e =>
        {
            var detail = e.originalEvent.detail
            
            if ( detail.id != component.attr('id') ) return

            // select_media_appendMedia({
            //     url: detail
            // })
        })
        // clear media
        function select_media_clearMedia()
        {
            js_select_media_control_body_contents.html('')
            js_select_media_control_body_contents.next().html('')
            js_media_control.removeClass('has-files')
            file_input.val(null)
            const _onMediaClearedEventName = new CustomEvent(onMediaClearedEventName, {
                detail: {
                    id: component.attr('id'),
                }
            }) 
            document.dispatchEvent(_onMediaClearedEventName)
        }
        // append media
        function select_media_appendMedia(options)
        {
            var file = options.file
            var url = options.url
            var extension = options.extension
            html = '<div class="select-media-control-body-image-content">'

            if ( isImageFile(file.path) )
            {
                html += `<img src="${url}" class="select-media-control-img js_select_media_control_img js_select_media_file" data-extension="${extension}" data-name="${file.name}" alt="">`
            }

            if ( isVideoFile(file.path) )
            {
                html += `<video src="${url}" class="select-media-control-img js_select_media_control_img js_select_media_file" data-extension="${extension}" data-name="${file.name}" alt="" muted ></video>`
            }

            html += '</div>'

            if ( js_media_control.hasClass('has-files') )
            {
                if ( isImageFile(file.path) )
                {
                    js_select_media_control_body_contents.next().append(`
                        <div class="col-md-4">
                            <img src="${url}" class="w-100 h-100 js_select_media_file" data-extension="${extension}" data-name="${file.name}" alt=""> 
                        </div>
                    `)
                }

                if ( isVideoFile(file.path) )
                {
                    js_select_media_control_body_contents.next().append(`
                        <div class="col-md-4">
                            <video src="${url}" class="w-100 h-100 js_select_media_file" data-extension="${extension}" data-name="${file.name}" alt=""></video>
                        </div>
                    `)
                }
                
                return
            }
            
            js_select_media_control_body_contents.append(html)
            js_media_control.addClass('has-files')
        }
        // get selected media
        function select_media_selected()
        {
            var list = []
            var items = component.find('.js_select_media_file')

            items.each((k,element) =>
            {
                const media = component.find(element)

                list.push({
                    url: media.attr('src'),
                    name: media.data('name'),
                    extension: media.data('extension')
                })
            })

            return list
        }
    })

</script>